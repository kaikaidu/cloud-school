<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amway.acti.dao.ScoreResultMapper">
  <resultMap id="BaseResultMap" type="com.amway.acti.model.ScoreResult">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="score" jdbcType="NUMERIC" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, user_id, stu_id, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_score_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_score_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.amway.acti.model.ScoreResult">
    insert into t_score_result (id, course_id, user_id, 
      stu_id, score)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{stuId,jdbcType=INTEGER}, #{score,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.amway.acti.model.ScoreResult">
    insert into t_score_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.amway.acti.model.ScoreResult">
    update t_score_result
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amway.acti.model.ScoreResult">
    update t_score_result
    set course_id = #{courseId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      stu_id = #{stuId,jdbcType=INTEGER},
      score = #{score,jdbcType=NUMERIC}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--Begin dk-->
  <select id="selectByCourseIdAndStuIdAndUid" parameterType="com.amway.acti.model.ScoreResult" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_score_result
    where stu_id = #{stuId,jdbcType=INTEGER}
    and course_id = #{courseId,jdbcType=INTEGER}
    and user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectTotalScoreByStuId" resultType="java.math.BigDecimal">
       SELECT
        SUM (score) total_score
    FROM
        (
            SELECT
                AVG (score) * (
                    SELECT
                        weight
                    FROM
                        t_weight w
                    WHERE
                        w.ident = t2.ident
                    AND temp_id = (
                        SELECT
                            sitem_temp_id
                        FROM
                            t_course
                        WHERE
                            sys_id = #{ courseId,
                              jdbcType = INTEGER }
                    )
                  AND course_id = #{courseId,jdbcType = INTEGER }
                  AND state = 1
				  AND release = 1
                ) AS score
            FROM
                t_score_result t1,
                t_user t2
            WHERE
                course_id = #{ courseId,
                jdbcType = INTEGER }
            AND stu_id = #{ stuId,
            jdbcType = INTEGER }
        AND t1.user_id = t2.id
        AND t2.state = 1
        GROUP BY
            t2.ident
        ) x
  </select>

  <select id="selectClassIdByCourseIdAndUid" resultType="java.lang.Integer">
        SELECT
        class_id
    FROM
        t_draw_result
    WHERE
      course_id = #{courseId,jdbcType=INTEGER}
    AND user_id = #{userId,jdbcType=INTEGER}
    AND state = 1
  </select>
  <!--End dk-->

    <!-- qj -->
    <select id="selectScoreDetail" resultType="com.amway.acti.dto.ScoreDetailDto">
        SELECT
            tu.name,
            tu.ident,
            tsr.score
        FROM
            t_score_result tsr
        LEFT JOIN t_user tu ON tsr.user_id = tu.id
        WHERE
            stu_id = (
                SELECT
                    id
                FROM
                    t_user
                WHERE
                    ada_number = #{adaNumber} AND state = 1
            )
        AND tsr.course_id = #{courseId}
    </select>

    <select id="selectByCourseIdAndStuId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_score_result
        where stu_id = #{stuId,jdbcType=INTEGER}
        and course_id = #{courseId,jdbcType=INTEGER}
    </select>
    <!-- end qj-->

    <!-- 删除课程下所有学员的评分结果wsc -->
    <delete id="deleteScoreResultByCourseIdAndUserId">
      delete
        from t_score_result
      where
        course_id = #{courseId} and
        user_id in (
        <foreach collection="list" item="s" separator=",">
            #{s}
        </foreach>
      )
    </delete>

    <!-- 根据课程id查询评分 wsc -->
    <select id="selectScoreResultByCourseId" resultMap="BaseResultMap">
      SELECT 
        <include refid="Base_Column_List"/>
      from
        t_score_result
      where course_id = #{courseId}
    </select>

    <!-- 根据课程id查询评分 wsc -->
    <delete id="deleteByCourseId" >
        DELETE
        from
        t_score_result
        where course_id = #{courseId}
    </delete>
</mapper>
