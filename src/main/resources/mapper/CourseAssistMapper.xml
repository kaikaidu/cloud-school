<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amway.acti.dao.CourseAssistMapper">
  <resultMap id="BaseResultMap" type="com.amway.acti.model.CourseAssist">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course_assist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_course_assist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.amway.acti.model.CourseAssist">
    insert into t_course_assist (id, course_id, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.amway.acti.model.CourseAssist">
    insert into t_course_assist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.amway.acti.model.CourseAssist">
    update t_course_assist
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amway.acti.model.CourseAssist">
    update t_course_assist
    set course_id = #{courseId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByCourse">
    delete from t_course_assist where course_id = #{courseId}
  </delete>

  <insert id="insertList">
    insert into t_course_assist (course_id, user_id
    ) VALUES
    <foreach collection="courseAssists" item="courseAssist" separator=",">
      (#{courseAssist.courseId},#{courseAssist.userId})
    </foreach>
  </insert>

  <select id="selectAssistByCourseId" resultType="string">
    SELECT
    DISTINCT tu.name
    FROM
    t_user tu
    LEFT JOIN t_course_assist tct ON tu.id = tct.user_id
    AND tu.state = 1
    WHERE tct.course_id = #{courseId}
  </select>

  <select id="selectAssistIdByCourse" resultType="java.lang.String">
    select id from t_user where id in (select user_id from t_course_assist where course_id = #{courseId})
  </select>
</mapper>
